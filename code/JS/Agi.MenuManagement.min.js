/**
 * Created with JetBrains WebStorm.
 * User: andy
 * Date: 12-8-22
 * Time: 上午10:06
 * To change this template use File | Settings | File Templates.
 */
Namespace.register('Agi.MenuManagement');
Agi.MenuManagement = function (option){
    var self = this;
    self.options = {
        dataSourceServerAddress:WebServiceAddress,
        controlXmlFile:"xml/ControlConfig.xml",
        pageManageNode:null
    };
    for(name in option){
        self.options[name] = option[name];
    }

    self.dragableDs = [];

    //datasource
    {
        //请示webservice,把所有实体绑定到左侧的菜单
        self.loadDataSource = function(container){
            var panel = typeof container == 'string'? $('#'+container):$(container);
            panel.empty();
            //request data
//            $.ajax({
//                timeout:10000,
//                url: self.options.dataSourceServerAddress+"/DSAllDataSet",
//                type: 'Post',
//                //data: { "jsonData": jsonString },   //参数               注： Key:jsonData, 后台通过jsonData获取数据
//                dataType: 'jsonp',                  //返回json数据类型
//                error:function(result){
//                    alert('Agi.MenuManagement.loadDataSource: '+result.statusText);
//                    $('#progressbar').hide();
//                },
//                success: function (result) {
//                    $('#progressbar').hide();
//                    var ds = result.Data.DataSets.DataSet.length?result.Data.DataSets.DataSet:[result.Data.DataSets.DataSet];
//                    var ui = $('<ul class="sub-menu" style="display: block; ">' +
//                        '</ul>');
//                    panel.append(ui);
//                    $(ds).each(function(i,d){
//                        //result.Data.DataSets.DataSet[0].DefaultVisualContrl.split('*')
//                        //var visControl = d.DefaultVisualContrl.split('*');
//                        var controltype = d.DefaultVisualContrl;
//                        //var initialize = visControl[1];
//                        var li = $('<li data-controltype="'+controltype+'"' +
//                            'data-id="'+ d.ID+'" data-DataSource="'+ d.DataSource+'" style="list-style: none;">' +
//                                    '<a><span><img src="Img/LeftIcon/datasetss.png"></span>'+ d.ID+'</a>' +
//                                  '</li>');
//                        li.appendTo(ui);
//                    });//end for
//
//                    self.dragableDs = panel.find('li');
//                    self.updateDataSourceDragDropTargets();
//                }//end success
//            });
            //
            Agi.DAL.ReadData({
                "MethodName": "DSAllDataSet",
                "Paras": null,          //无参数为null
                "CallBackFunction": function (result) {    //回调函数
                    $('#progressbar1').hide();
                    var ds = result.Data.DataSets.DataSet.length?result.Data.DataSets.DataSet:[result.Data.DataSets.DataSet];
                    var ui = $('<ul class="sub-menu" style="display: block; ">' +
                        '</ul>');
                    panel.append(ui);
                    $(ds).each(function(i,d){
                        //result.Data.DataSets.DataSet[0].DefaultVisualContrl.split('*')
                        //var visControl = d.DefaultVisualContrl.split('*');
                        var controltype = d.DefaultVisualContrl;
                        //var initialize = visControl[1];
                        var li = $('<li data-controltype="'+controltype+'"' +
                            'data-id="'+ d.ID+'" data-DataSource="'+ d.DataSource+'" style="list-style: none;">' +
                            '<a><span><img src="Img/LeftIcon/datasetss.png"></span>'+ d.ID+'</a>' +
                            '</li>');
                        li.appendTo(ui);
                    });//end for

                    self.dragableDs = panel.find('li');
                    self.updateDataSourceDragDropTargets();
                }
            });
        }


        //让左侧的实体可以拖动,拖动完成后将实体的基本信息传给控件的ReadData方法
        self.updateDataSourceDragDropTargets = function (){
            var dragableDs = self.dragableDs.length?self.dragableDs:[self.dragableDs];
            var dropTargets = $("#BottomRightCenterContentDiv div[id^='Panel'],#BottomRightCenterContentDiv");//找出画布里面的控件
            dragDataSourceItems = null;
            dragDataSourceItems = [];
    //        //没有找到控件,把画布作为目标
    //        if(!dropTargets){
    //            dropTargets=[];
    //            dropTargets.push($('#BottomRightCenterContentDiv'));
    //        }
    //        //如果有控件,把画布也加进来
    //        if(!dropTargets.length){
    //            dropTargets.push($('#BottomRightCenterContentDiv')[0]);
    //        }
            if(dropTargets.length){
                $(dragableDs).each(function(i,ds){
                    var dragDs = new Agi.DragDrop.SimpleDragDrop({
                        dragObject: ds,
                        targetObject: dropTargets, //目标为画布中的控件
                        //拖拽完成回调
                        dragEndCallBack: function (d) {
                            var datasetid = d.object.data('id');
                            var jsonData = { "datasetID": datasetid };
                            var jsonString = JSON.stringify(jsonData); //将json对象转换成字符串，用于提交给后台

                            var controltype = d.object.data('controltype');
                            //var initialize = d.object.data('initialize');

                            //请求虚拟表的信息
//                            $.ajax({
//                                url: self.options.dataSourceServerAddress + "/VSGetVirtualTable",
//                                type: 'Post',
//                                data: { "jsonData": jsonString },   //参数               注： Key:jsonData, 后台通过jsonData获取数据
//                                dataType: 'jsonp',                  //返回json数据类型
//                                success: function (result) {
//
//                                    //---------构造实体信息
//                                    var entityInfo = {
//                                        Key:result.datasetData.DataSet.ID,
//                                        Parameters:[],
//                                        Data:null,
//                                        Filter:null,
//                                        Columns:result.virtualTableData.SingleEntityInfo.SqlDefined.Schema
//                                    };
//                                    var parms = result.virtualTableData.SingleEntityInfo.SqlDefined.Para;
//                                    if(parms){
//                                        parms = parms.length ? parms:[parms];
//                                    }
//                                    $(parms).each(function(i,p){
//                                        entityInfo.Parameters.push({Key:p.ID,Value:p.Default});
//                                    });
//                                    entityInfo = entityInfo?entityInfo:undefined;
//
//                                    //---------查询拖拽的实体落到了哪一个控件上
//                                    //把表信息传给控件,让控件自己根实体信息取数据
//                                    var con = Agi.Controls.FindControlByPanel(d.target.attr('id'));
//                                    if(con){//如果拖拽落到控件上
//                                        con.ReadData(entityInfo);
//                                        return;
//                                    }
//
//                                    //---------根据实体配置的控件类型 新建一个控件,并加载数据
//                                    var controlInfo = self.findControlInfo(controltype);
//                                    var ContentDivObj = null;
//                                    var ThisDragControlType = controltype;//d.object.attr("controlType"); /*实际应该从拖拽元素的自定义属性ControlType中获取*/
//                                    var ThissDragControlInitFun= controlInfo._InitFun;//d.object.attr("initialize");/*控件初始化方法*/
//                                    if (layoutManagement.property.type == 1) {
//                                        ContentDivObj = $('#BottomRightCenterContentDiv'); /*画布对象*/
//                                        var thisleft = parseInt(d.position.left.replace("px", "")) - ContentDivObj.offset().left;
//                                        var thistop = parseInt(d.position.top.replace("px", "")) - ContentDivObj.offset().top;
//
//                                        //InitControl(ContentDivObj, { Left: thisleft, Top: thistop }, ThisDragControlType); //初始化生成控件
//                                        InitControlToCanvas(ContentDivObj,{ Left:thisleft,Top:thistop},Agi.Edit.workspace.GetControlsLibs(ThisDragControlType),ThissDragControlInitFun,entityInfo);
//                                    } else if (layoutManagement.property.type == 2) {
//                                        ContentDivObj = $(d.target);
//                                        //InitControl(ContentDivObj, null, ThisDragControlType); //初始化生成控件
//                                        InitControlToCanvas(ContentDivObj,null,Agi.Edit.workspace.GetControlsLibs(ThisDragControlType),ThissDragControlInitFun,entityInfo);
//
//                                    }
//                                    ThisDragControlType = thisleft = thistop = null; /*清空不需要对象，释放内存*/
//                                }
//                            });//end ajax
                            Agi.DAL.ReadData({
                                "MethodName": "VSGetVirtualTable",
                                "Paras": jsonString,  //json字符串
                                "CallBackFunction":function(result){
                                    if(result.result=='false'){
                                        alert('Agi.MenuManagement.updateDataSourceDragDropTargets:\n'+result.message);
                                        return;
                                    }
                                    //---------构造实体信息
                                    var entityInfo = {
                                        Key:result.datasetData.DataSet.ID,
                                        Parameters:[],
                                        Data:null,
                                        Filter:null,
                                        Columns:result.virtualTableData.SingleEntityInfo.SqlDefined.Schema
                                    };
                                    var parms = result.virtualTableData.SingleEntityInfo.SqlDefined.Para;
                                    if(parms){
                                        parms = parms.length ? parms:[parms];
                                    }
                                    $(parms).each(function(i,p){
                                        entityInfo.Parameters.push({Key:p.ID,Value:p.Default});
                                    });
                                    entityInfo = entityInfo?entityInfo:undefined;

                                    //---------查询拖拽的实体落到了哪一个控件上
                                    //把表信息传给控件,让控件自己根实体信息取数据
                                    var con = Agi.Controls.FindControlByPanel(d.target.attr('id'));
                                    if(con){//如果拖拽落到控件上
                                        con.ReadData(entityInfo);
                                        return;
                                    }

                                    //---------根据实体配置的控件类型 新建一个控件,并加载数据
                                    var controlInfo = self.findControlInfo(controltype);
                                    var ContentDivObj = null;
                                    var ThisDragControlType = controltype;//d.object.attr("controlType"); /*实际应该从拖拽元素的自定义属性ControlType中获取*/
                                    var ThissDragControlInitFun= controlInfo._InitFun;//d.object.attr("initialize");/*控件初始化方法*/
                                    if (layoutManagement.property.type == 1) {
                                        ContentDivObj = $('#BottomRightCenterContentDiv'); /*画布对象*/
                                        var thisleft = parseInt(d.position.left.replace("px", "")) - ContentDivObj.offset().left;
                                        var thistop = parseInt(d.position.top.replace("px", "")) - ContentDivObj.offset().top;

                                        //InitControl(ContentDivObj, { Left: thisleft, Top: thistop }, ThisDragControlType); //初始化生成控件
                                        InitControlToCanvas(ContentDivObj,{ Left:thisleft,Top:thistop},Agi.Edit.workspace.GetControlsLibs(ThisDragControlType),ThissDragControlInitFun,entityInfo);
                                    } else if (layoutManagement.property.type == 2) {
                                        ContentDivObj = $(d.target);
                                        //InitControl(ContentDivObj, null, ThisDragControlType); //初始化生成控件
                                        InitControlToCanvas(ContentDivObj,null,Agi.Edit.workspace.GetControlsLibs(ThisDragControlType),ThissDragControlInitFun,entityInfo);

                                    }
                                    ThisDragControlType = thisleft = thistop = null; /*清空不需要对象，释放内存*/
                                }
                            });
                        },
                        dargStartCallBack:function(){
                            var tran = this.transcript;
                            tran.css('background-color','transparent');
                            var spanStr = tran.find('span')[0].outerHTML;
                            tran.empty().css('width','auto');
                            $(spanStr).appendTo(tran);
                            tran.find('img').width(tran.find('img').width()*3);
                        }
                    });
                    dragDataSourceItems.push(dragDs);
                });
            }
        }
    }

    //control
    {
        self.controlConfigFile = null;
        self.loadControls = function(container,workspace){
            var panel = typeof container == 'string' ? $('#'+container) : $(container);
            var conList = null;
            var conList = [];
            $.get(self.options.controlXmlFile,function(data){
                self.controlConfigFile = data;
                var js = JSON.parse( Agi.Utility.xml2json($(data).find('Controls')[0],"") );
                panel.empty();
                var groups = js.Controls.Group.length?js.Controls.Group:[js.Controls.Group];
                $(groups).each(function(i,g){
                    //create group
                    {
                        var id = 'collapse'+Agi.Script.CreateControlGUID();
                        var aGroup = '<div class="accordion-group">'+
                            '<div class="accordion-heading">'+
                            '<a title="'+g['@Name']+'" class="accordion-toggle" data-toggle="collapse" data-parent="#controlsListContaner" href="#'+id+'">'+
                                '<span>' +
                                    //'<img src="Img/lefticon/controls.png" alt="'+g['@Name']+'">' +
                                '</span>'+
                                ''+g['@Name']+''+
                                '</a>'+
                            '</div>'+
                            '<div id="'+id+'" class="accordion-body collapse" style="height: 0px; ">'+
                                '<div class="accordion-inner">'+
                                '</div>'+
                            '</div>'+
                            '</div>';
                        panel.append(aGroup);
                    }

                    //create control to group
                    {
                        var controls = g.Control.length ? g.Control : [g.Control];
                        var subContainer = $($('#'+id).find('.accordion-inner')[0]);
                        $(controls).each(function(i,con){
                            //
                            var files = con.Files.File.length?con.Files.File:[con.Files.File];
                            var ControlLibs=[];
                            $.each(files,function(i,file){
                                ControlLibs.push(file['@Path']);
                            })
                            if(workspace){
                                workspace.ControlsLibs.push({ "controlType": con['@ControlType'], "files":ControlLibs});
                            }
                            //ui
                            var str = '<ui class="sub-menu">' +
                                '<li controlType="'+con['@ControlType']+'" initialize="'+con['@Initialize']+'" style="list-style: none;"><a>' +
                                '<span><img src="Img/Lefticon/controls.png" alt="'+con['@ControlName']+'"></span>' +
                                ''+con['@ControlName']+''+
                                '</a></li></ui>';
        //                    <Control id='1' ControlType='Panel' ControlName='容器框' IcoURL='JS/Controls/Panel/Panel_ico.png' Initialize="Agi.Controls.InitPanel">
        //                        <Files>
        //                            <File Type='js'  Path='JS/Controls/Panel/Panel.js'></File>
        //                            <File Type='css'  Path='JS/Controls/Panel/Panel.css'></File>
        //                        </Files>
        //                    </Control>
                            subContainer.append(str);
                            conList.push($(str));
                        });//end for by create control
                    }
                });//end for by create group
                dragable(panel.find('li'));
            });//end $.get
            return;
    }

        function dragable(objArray){
            var targts = layoutManagement.property.type == 1 ? 'BottomRightCenterContentDiv' : layoutManagement.getCells();
            $(objArray).each(function(i,con){
                //为每个左边的控件添加拖动处理
                var dragItem = new Agi.DragDrop.SimpleDragDrop({
                    dragObject: con,
                    targetObject: targts, //目标为中间的画布
                    //拖拽完成回调
                    dragEndCallBack: function (d) {
                        //d.target :鼠标释放时落在哪一个元素上
                        //d.position :鼠标释放时 拖动对象副本的位置
                        //d.object     //当前拖动对象
                        var ContentDivObj = null;
                        var ThisDragControlType = d.object.attr("controlType"); /*实际应该从拖拽元素的自定义属性ControlType中获取*/
                        var ThissDragControlInitFun= d.object.attr("initialize");/*控件初始化方法*/
                        if (layoutManagement.property.type == 1) {
                            ContentDivObj = $('#BottomRightCenterContentDiv'); /*画布对象*/
                            var thisleft = parseInt(d.position.left.replace("px", "")) - ContentDivObj.offset().left;
                            var thistop = parseInt(d.position.top.replace("px", "")) - ContentDivObj.offset().top;

                            //InitControl(ContentDivObj, { Left: thisleft, Top: thistop }, ThisDragControlType); //初始化生成控件
                            InitControlToCanvas(ContentDivObj,{ Left:thisleft,Top:thistop},Agi.Edit.workspace.GetControlsLibs(ThisDragControlType),ThissDragControlInitFun);
                        } else if (layoutManagement.property.type == 2) {
                            ContentDivObj = $(d.target);
                            //InitControl(ContentDivObj, null, ThisDragControlType); //初始化生成控件
                            InitControlToCanvas(ContentDivObj,null,Agi.Edit.workspace.GetControlsLibs(ThisDragControlType),ThissDragControlInitFun);

                        }
                        ThisDragControlType = thisleft = thistop = null; /*清空不需要对象，释放内存*/
                    },
                    dargStartCallBack:function(){
                        var tran = this.transcript;
                        tran.css('background-color','transparent');
                        var spanStr = tran.find('span')[0].outerHTML;
                        tran.empty().css('width','auto');
                        $(spanStr).appendTo(tran);
                        tran.find('img').width(tran.find('img').width()*3);
                    }
                });
                dragControlItems.push(dragItem);
            });
    }

        self.findControlInfo = function(type){
        var control = $('Control[ControlType="'+type+'"]',self.controlConfigFile);
        var info = {
            _controlLibs:[],
            _InitFun: control.attr('Initialize')
        };
        control.find('Files File').each(function(i,f){
            info._controlLibs.push($(f).attr('Path'));
        });
        return info;
    }
    }

    //page
    {
        //specialNode:为指定节点添加列表,如果没有传递,表示从根目录加载
        self.loadPages = function (specialNode){
            var container = specialNode ? specialNode : self.options.pageManageNode;
            if(!container){
                return;
            }
            //一级一级往上 取路径
            var direction = "PageManager";
            var dir = new Array();
            var level = 1;
            if(specialNode){
                var className =  specialNode.attr('class');
                var parentLi = specialNode.parent();
                while(className!='sub-menu'){
                    var fileName = parentLi.data('filename');
                    if(fileName){
                        dir.push(fileName);
                        level +=1 ;
                    }
                    parentLi = parentLi.parent();
                    className = parentLi.attr('class');
                }//end while
                direction += '/' + dir.reverse().join('/');
            }
            var jsonData = {
                "url": direction,"ID":null
            };
            var jsonString = JSON.stringify(jsonData);

            Agi.DAL.ReadData({
                "MethodName": "FMGetFileByParent",
                "Paras": jsonString,  //json字符串
                "CallBackFunction": function (result) {     //回调函数
                    if(result.result){
                        container.empty();
                        $(result.data).each(function(i,f){
                            var fileName = f.name.replace('.xml','');

                            var icon = f.isFile =='true' ? $('<span><img src="Img/LeftIcon/duplicate2.png"></span>'):$('<span><img src="Img/LeftIcon/datasetss.png"></span>');
                            if(level>1){
                                var marginLeft = level*11;
                                icon.css('margin-left',marginLeft + 'px');
                            }
                            var li = $('<li data-filename='+fileName+' data-isfile='+ f.isFile +'><a class="active">'+ icon[0].outerHTML + fileName +'</a></li>');

                            li.appendTo(container);
                            var pl = li.find('span:eq(0)').offset().left + li.find('span:eq(0)').width();
                            li.find('a').css('padding-left',pl <= 0 ? 40 : pl + 'px');
                        });
                        addContextMenuForPages(container.find('li'));
                        addClickCallBack(container.find('li[data-isfile="false"]'));
                        if(specialNode){
                            container.slideDown('fast');
                        }else{
                            addContextMenuForPages(container.parent());
                        }
                    }
                }
            });

        }
        self.getFilePath = function (el){
            var specialNode = $(el);
            //一级一级往上 取路径
            var direction = "";
            var dir = new Array();
            var level = 1;
            if(specialNode){
                var parentLi = specialNode.parent();
                var className =  parentLi.attr('class');
                while(className!='sub-menu'){
                    var fileName = parentLi.data('filename');
                    if(fileName){
                        dir.push(fileName);
                        level +=1 ;
                    }
                    parentLi = parentLi.parent();
                    className = parentLi.attr('class');
                }//end while
                direction += dir.reverse().join('/');
            }
            var filename = $(el).data('filename').toString();
            if(level>1){
                filename = direction + '/' + filename;
            }
            return filename;
        }
        //为页面加上右键菜单
        function addContextMenuForPages (jQObjectArray){
            //加入右键菜单
            //return;
            jQObjectArray.contextMenu('pageManagement', {
                "bindings":{
                    "pageManagement-edit":function(e){
                        var filename = self.getFilePath(e);
                        ShowNewMainPage();
                        Agi.Edit.workspace.controlList.clear();
                        Agi.Edit.OpenPage(filename);
                    },
                    "pageManagement-view":function(e){
                        var filename = self.getFilePath(e);
                        ShowNewMainPage();
                        Agi.Edit.workspace.controlList.clear();
                        Agi.Edit.OpenPage(filename);
                    },
                    "pageManagement-delete":function(e){
                        var filename = self.getFilePath(e);
                        if(!confirm('确定要删除文件:  '+filename+'  ?')){
                            return;
                        }
                        var jsonData = {"url": filename};
                        var jsonString = JSON.stringify(jsonData); //将json对象转换成字符串，用于提交给后台

                        Agi.DAL.ReadData({
                            "MethodName": "VSFileDelete",
                            "Paras": jsonString,  //json字符串
                            "CallBackFunction": function (result) {     //回调函数
                                if(result.result){
                                    //self.loadPages();
                                    $(e).remove();
                                }else{
                                }
                                alert(result.message);
                            }
                        });
                    },

                    //文件夹的操作
                    "pageManagement-delete2":function(e){
                        var filename = self.getFilePath(e);
                        if(confirm('确定要删除目录: '+ filename + ' ? ')){

                            var jsonData = {"url": filename,isFile:false,isDelete:true,"ID":file};
                            var jsonString = JSON.stringify(jsonData); //将json对象转换成字符串，用于提交给后台

                            Agi.DAL.ReadData({
                                "MethodName": "VSFileDelete",
                                "Paras": jsonString,  //json字符串
                                "CallBackFunction": function (result) {     //回调函数
                                    if(result.result){
                                        $(e).remove();
                                    }else{
                                    }
                                    alert(result.message);
                                }
                            });
                        }
                    },
                    "pageManagement-refresh":function(e){
                        var fname = self.getFilePath(e);
                        alert(fname);
                    },

                    "pageManagement-refreshRoot":function(e){
                        self.loadPages();
                    }
                },
                onShowMenu: function(e, menu) {
                    $(menu).find('li').hide();
                    //alert('menu');
                    var liNode = $(e.target);
                    var tagName = liNode[0].tagName;
                    while(tagName!='LI'){
                        liNode = liNode.parent();
                        tagName = liNode[0].tagName;
                    }
                    var isfile = liNode.data('isfile').toString();
                    //alert(isfile);
                    if(isfile=='true'){
                        $(menu).find('.page').show();
                    }else if(isfile=='false'){
                        $(menu).find('.folder').show();
                    }else if(isfile=='pageRoot'){
                        $(menu).find('.pageRoot').show();
                    }
                    return menu;
                }
            });
        }
        //为页面加上单击事件
        function addClickCallBack(jqOjbectArray){
            $(jqOjbectArray).unbind('click',folderClickCallBack);
            $(jqOjbectArray).bind('click',folderClickCallBack);
        }

        function folderClickCallBack(e){
            var isPage = $(this).data('isfile');
            if(!isPage){
               if(!$(this).find('>ul').length){
                var ul = $('<ul style="display:block;">');
                ul.appendTo($(this));
                self.loadPages(ul);
               }
            }
        }
    }

    //获取当前所有控件中最大和最小的zindex
    self.getControlMaxzIndex = function(canvas){
        var indexArr = [1000];
        var max = indexArr[0],min= indexArr[0];
        var controlList = canvas.find('.PanelSty');
        controlList.each(function(i,con){
            var index = parseInt( $(con).css('z-index') );
            if(isNaN(index)){
                index = 0;
            }
            indexArr.push(index);
        });
        $(indexArr).each(function(i,ind){
            if(ind>max){
                max = ind;
            }
            if(ind<min){
                min = ind;
            }
        });
        return {
            max:max,
            min:min
        };
    }
}